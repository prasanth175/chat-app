{"version":3,"sources":["misc/helpers.jsx","context/profile.context.jsx","components/PrivateRoute.jsx","misc/custom-hooks.jsx","components/CreateRoomBtnModal.jsx","components/EditableInput.jsx","components/ProfileAvatar.jsx","components/dashboard/AvatarUploadBtn.jsx","components/dashboard/ProviderBlock.jsx","components/dashboard/index.jsx","components/dashboard/DashboardToggle.jsx","context/rooms.context.jsx","components/rooms/RoomItem.jsx","components/rooms/ChatRoomList.jsx","components/Sidebar.jsx","context/current-room.context.jsx","components/chat-window/top/AskFcmBtnModal.jsx","components/chat-window/top/EditRoomBtnDrawer.jsx","components/chat-window/top/RoomInfoBtnModal.jsx","components/chat-window/top/SendFcmBtnModal.jsx","components/chat-window/top/index.jsx","components/chat-window/bottom/AttachmentBtnModal.jsx","components/chat-window/bottom/AudioMsgBtn.jsx","components/chat-window/bottom/index.jsx","components/PresenceDot.jsx","components/chat-window/messages/IconBtnControl.jsx","components/chat-window/messages/ImgBtnModal.jsx","components/chat-window/messages/ProfileInfoBtnModal.jsx","components/chat-window/messages/MessageItem.jsx","components/chat-window/messages/index.jsx","pages/Home/Chat.jsx","pages/Home/index.jsx","components/PublicRoute.jsx","components/ErrorBoundary.jsx","App.jsx","index.jsx","misc/firebase.jsx"],"names":["getNameInitials","name","splitName","toUpperCase","split","length","transformToArr","snapVal","Object","keys","transformToArrWithId","map","roomId","id","getUserUpdates","userId","keyToUpdate","value","db","updates","getMsgs","ref","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","groupBy","array","groupingKeyFn","reduce","result","item","groupingKey","push","isLocalhost","Boolean","window","location","hostname","match","isOfflineForDatabase","state","last_changed","firebase","database","ServerValue","TIMESTAMP","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","useState","profile","setProfile","isLoading","setIsLoading","useEffect","userRef","userStatusRef","tokenRefreshUnsub","authUnsub","auth","onAuthStateChanged","authObj","uid","on","snap","val","createdAt","data","avatar","email","snapshot","onDisconnect","set","then","messaging","getToken","vapidKey","fcmVapidKey","currentToken","console","log","onTokenRefresh","off","Provider","useProfile","useContext","PrivateRoute","routeProps","Container","Loader","center","vertical","size","content","speed","to","useModalState","defaultValue","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","matchMedia","matches","setMatches","queryList","listener","evt","addListener","removeListener","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","useRef","onFormChange","onSubmit","current","check","newRoomdata","admins","currentUser","fcmUsers","Alert","info","error","message","className","Button","block","color","onClick","Icon","icon","Modal","show","onHide","Header","Title","Body","Form","fluid","onChange","FormGroup","ControlLabel","FormControl","placeholder","componentClass","rows","Footer","appearance","disabled","EditableInput","initialValue","onSave","label","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","InputGroup","Input","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","Error","AvatarUploadBtn","img","setImg","avatarEditorRef","onUploadClick","getImageScaledToCanvas","avatarFileRef","storage","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","image","width","height","border","borderRadius","rotate","ProviderBlock","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","link","provider","linkWithPopup","Tag","closable","onClose","GoogleAuthProvider","FacebookAuthProvider","Dashboard","onSignOut","newData","success","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","RoomItem","room","lastMessage","datetime","Date","author","text","ChatRoomList","aboveElementHeight","useLocation","Nav","reversed","style","activeKey","pathname","Item","Link","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","aboveElHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","AskFcmBtnModal","chatId","useParams","isReceivingFcm","v","IconButton","backdrop","Notification","permission","remove","EditRoomBtnDrawer","updateData","newName","newDesc","memo","RoomInfoBtnModal","title","SendFcmBtnModal","sendFcm","functions","httpsCallable","Top","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","preventDefault","getColor","presence","getText","toLocaleDateString","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","ImgBtnModal","fileName","alt","href","rel","ProfileInfoBtnModal","btnProps","shortName","memberSince","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groups","toDateString","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","Grid","Row","Col","xs","md","exact","path","PublicRoute","ErrorBoundary","errorInfo","this","setState","whiteSpace","toString","componentStack","React","Component","SignIn","lazy","App","fallback","ReactDOM","createRoot","document","getElementById","render","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","isSupported","onMessage","notification","body","Toast","duration","useEmulator"],"mappings":"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","file":"static/js/main.f5668e51.chunk.js","sourcesContent":["export function getNameInitials(name) {\r\n    const splitName = name.toUpperCase().split(' ');\r\n\r\n    if (splitName.length > 1) {\r\n        return splitName[0][0] + splitName[1][0];\r\n    }\r\n\r\n    return splitName[0][0];\r\n\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\n  return snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n    return snapVal\r\n      ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId};\r\n      })\r\n      : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {}\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n    const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n    mSnap.forEach(msgSnap => {\r\n      updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n    })\r\n\r\n    rSnap.forEach(roomSnap => {\r\n      updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n    });\r\n\r\n    return updates;\r\n}\r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {})\r\n}\r\n\r\nexport const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\n","/* eslint-disable react/jsx-no-constructed-context-values */\r\n/* eslint-disable no-console */\r\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport { auth, database, fcmVapidKey, messaging } from \"../misc/firebase\";\r\n\r\nexport const isOfflineForDatabase = {\r\n    state: 'offline',\r\n    last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n    state: 'online',\r\n    last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\n\r\nconst ProfileContext = createContext();\r\n\r\nfunction ProfileProvider({ children }) {\r\n    const [profile, setProfile] =  useState(null);\r\n    const[isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        let userRef;\r\n        let userStatusRef;\r\n        let tokenRefreshUnsub;\r\n\r\n        const authUnsub = auth.onAuthStateChanged(async authObj => {\r\n            if(authObj) {\r\n               userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n               userRef =  database.ref(`/profiles/${authObj.uid}`);\r\n               userRef.on('value', (snap) => {\r\n                    const {name, createdAt, avatar } = snap.val();\r\n\r\n                    const data = {\r\n                        name,\r\n                        avatar,\r\n                        createdAt,\r\n                        uid : authObj.uid,\r\n                        email : authObj.email\r\n                    }\r\n\r\n                    setProfile(data);\r\n                    setIsLoading(false);\r\n                });\r\n\r\n                database.ref('.info/connected').on('value', (snapshot) => {\r\n                    if (!!snapshot.val() === false) {\r\n                        return;\r\n                    };\r\n                \r\n                    userStatusRef.onDisconnect().set(isOfflineForDatabase).then(() => {\r\n                        userStatusRef.set(isOnlineForDatabase);\r\n                    });\r\n                });\r\n\r\n                if(messaging) {\r\n\r\n                    try {\r\n                        const currentToken = await messaging.getToken({\r\n                            vapidKey: fcmVapidKey,\r\n                        })\r\n                        if (currentToken) {\r\n                            await database.ref(`/fcm_token/${currentToken}`).set(authObj.uid);\r\n                             } \r\n                    } catch (err) {\r\n                        console.log('An error occurred while retrieving token. ', err);\r\n                    }\r\n\r\n                    tokenRefreshUnsub = messaging.onTokenRefresh(async () => {\r\n                        try {\r\n                            const currentToken = await messaging.getToken();\r\n                            if (currentToken) {\r\n                                await database.ref(`/fcm_token/${currentToken}`).set(authObj.uid);\r\n                                 } \r\n                        } catch (err) {\r\n                            console.log('An error occurred while retrieving token. ', err);\r\n                        }\r\n                    });\r\n                }\r\n\r\n            }else {\r\n\r\n                if(userRef) {\r\n                    userRef.off()\r\n                }\r\n\r\n                if(userStatusRef) {\r\n                    userStatusRef.off()\r\n                }\r\n\r\n                if(tokenRefreshUnsub) {\r\n                    tokenRefreshUnsub()\r\n                }\r\n\r\n                database.ref('.info/connected').off();\r\n\r\n                setProfile(null);\r\n                setIsLoading(false);\r\n            }\r\n        });\r\n\r\n        return () => {\r\n            authUnsub();\r\n\r\n            database.ref('.info/connected').off();\r\n\r\n\r\n            if(userRef) {\r\n                userRef.off();\r\n            }\r\n\r\n            if(tokenRefreshUnsub) {\r\n                tokenRefreshUnsub()\r\n            }\r\n\r\n            if(userStatusRef) {\r\n                userStatusRef.off();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <ProfileContext.Provider value={ { isLoading, profile } }>\r\n            {children}\r\n        </ProfileContext.Provider>\r\n    );\r\n};\r\n\r\nexport default ProfileProvider;\r\n\r\nexport const useProfile = () => useContext(ProfileContext);","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nfunction PrivateRoute({ children, ...routeProps }) {\r\n\r\n    const { profile, isLoading} = useProfile();\r\n\r\n\r\n    if(isLoading && !profile) {\r\n      return <Container>\r\n        <Loader center vertical size='md' content=\"Loading\" speed='slow' />\r\n      </Container>\r\n    }\r\n\r\n    if(!profile && !isLoading) {\r\n        return <Redirect to=\"/signin\" />\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Route { ...routeProps }>\r\n            {children}\r\n        </Route>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PrivateRoute;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { database } from './firebase';\r\n\r\n\r\nexport function useModalState(defaultValue = false) {\r\n    const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n    const open = useCallback(() => setIsOpen(true), []);\r\n    const close = useCallback(() => setIsOpen(false), []);\r\n\r\n    return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n    const [matches, setMatches] = useState(\r\n      () => window.matchMedia(query).matches\r\n    );\r\n  \r\n    useEffect(() => {\r\n      const queryList = window.matchMedia(query);\r\n      setMatches(queryList.matches);\r\n  \r\n      const listener = evt => setMatches(evt.matches);\r\n  \r\n      queryList.addListener(listener);\r\n      return () => queryList.removeListener(listener);\r\n    }, [query]);\r\n  \r\n    return matches;\r\n  };\r\n\r\n  export function usePresence(uid) {\r\n    const [presence, setPresence] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n      const userStatusRef = database.ref(`/status/${uid}`)\r\n      \r\n      userStatusRef.on('value', (snap) => {\r\n\r\n        if(snap.exists()) {\r\n          const data = snap.val();\r\n\r\n          setPresence(data);\r\n        }\r\n      })\r\n    }, [uid])\r\n\r\n    return presence;\r\n  }\r\n\r\n  export function useHover() {\r\n    const [value, setValue] = useState(false);\r\n\r\n    const ref = useRef(null);\r\n\r\n    const handleMouseOver = () => setValue(true);\r\n    const handleMouseOut = () => setValue(false);\r\n    useEffect(\r\n      () => {\r\n        const node = ref.current;\r\n        if (node) {\r\n          node.addEventListener(\"mouseover\", handleMouseOver);\r\n          node.addEventListener(\"mouseout\", handleMouseOut);\r\n          };\r\n          return () => {\r\n            node.removeEventListener(\"mouseover\", handleMouseOver);\r\n            node.removeEventListener(\"mouseout\", handleMouseOut);\r\n        }\r\n      },\r\n      [ref.current] // Recall only if ref changes\r\n    );\r\n    return [ref, value];\r\n  }\r\n  ","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Alert, Button, ControlLabel, Form, FormControl, FormGroup, Icon, Modal, Schema } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useModalState } from '../misc/custom-hooks';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n    name: StringType().isRequired('Chat name is required'),\r\n    description: StringType().isRequired('Description is required'),\r\n})\r\n\r\nconst INITIAL_FORM = {\r\n    name: '',\r\n    description: ''\r\n}\r\n\r\nfunction CreateRoomBtnModal() {\r\n\r\n    const { isOpen, open, close } = useModalState();\r\n    \r\n    const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const formRef = useRef();\r\n\r\n    const onFormChange = useCallback(value => { \r\n        setFormValue(value);\r\n    }, []);\r\n\r\n    const onSubmit = async () => {\r\n        if(!formRef.current.check()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        const newRoomdata = {\r\n            ...formValue,\r\n            createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n            admins: {\r\n                [auth.currentUser.uid]: true\r\n            },\r\n            fcmUsers: {\r\n                [auth.currentUser.uid]: true,\r\n            },\r\n        }\r\n\r\n        try {\r\n\r\n            await database.ref('rooms').push(newRoomdata);\r\n\r\n            Alert.info(`${formValue.name} has been created`, 4000);\r\n\r\n            setIsLoading(false);\r\n            setFormValue(INITIAL_FORM);\r\n            close();\r\n            \r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            Alert.error(err.message, 4000);\r\n            \r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='mt-1'>\r\n        <Button block color='green' onClick={open}>\r\n            <Icon icon='creative' /> Create new chat room\r\n        </Button>\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    New chat room\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form fluid onChange={onFormChange} formValue={formValue} model={model} ref={formRef}>\r\n\r\n                    <FormGroup>\r\n                        <ControlLabel>Room name</ControlLabel>\r\n                        <FormControl name='name' placeholder='Enter chat room name...' />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <ControlLabel>Description</ControlLabel>\r\n                        <FormControl componentClass='textarea' rows={5} name='description' placeholder='Enter room description...' />\r\n                    </FormGroup>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button block appearance='primary' onClick={onSubmit} disabled={isLoading}>\r\n                    Create new chat room\r\n                </Button>\r\n            </Modal.Footer>\r\n            \r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateRoomBtnModal;","import React, { useCallback, useState } from 'react';\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\n\r\nfunction EditableInput({ initialValue, onSave, label = null, placeholder = \"write your value\", emptyMsg = \"Input is empty\",wrapperClassName = \"\", ...inputProps }) {\r\n\r\n    const [input, setInput] = useState(initialValue);\r\n    const [isEditable, setIsEditable] = useState(false);\r\n\r\n    const onInputChange = useCallback((value) => {\r\n        setInput(value);\r\n    }, []);\r\n\r\n    const onEditClick = useCallback(() => {\r\n        setIsEditable(p => !p);\r\n        setInput(initialValue);\r\n    }, [initialValue]);\r\n\r\n    const onSaveClick = async () => {\r\n        const trimmed = input.trim();\r\n\r\n        if(trimmed === '') {\r\n            Alert.info(emptyMsg, 4000)\r\n        }\r\n\r\n        if (trimmed !== initialValue) {\r\n            await onSave(trimmed);\r\n        }\r\n\r\n\r\n        \r\n        setIsEditable(false);\r\n    }\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n        {label}\r\n        <InputGroup>\r\n        <Input {...inputProps} disabled={!isEditable} placeholder={placeholder} value={input} onChange={onInputChange} />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n        <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable &&\r\n        <InputGroup.Button onClick={onSaveClick}>\r\n        <Icon icon=\"check\" />\r\n        </InputGroup.Button>\r\n        }\r\n        </InputGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditableInput;","import React from 'react'\r\nimport { Avatar } from 'rsuite'\r\nimport { getNameInitials } from '../misc/helpers'\r\n\r\nfunction ProfileAvatar({ name, ...avatarProps }) {\r\n  return <Avatar circle {...avatarProps}>{getNameInitials(name)}</Avatar>\r\n}\r\n\r\nexport default ProfileAvatar;","import React, { useRef, useState } from 'react';\r\nimport AvatarEditor from 'react-avatar-editor'\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg';\r\n\r\nconst acceptedFileTypes = ['image/png', 'image/jpeg', 'image/jpg'];\r\nconst isValidFile = (file) => acceptedFileTypes.includes(file.type);\r\n\r\nconst getBlob = canvas => {\r\n    return new Promise((resolve, reject) => {\r\n        canvas.toBlob(blob => {\r\n            if (blob) {\r\n                resolve(blob);\r\n            } else {\r\n                reject(new Error('File process error'));\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction AvatarUploadBtn() {\r\n\r\n    const { isOpen, open, close } = useModalState();\r\n\r\n    const {profile} = useProfile();\r\n    const [ img, setImg ] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const avatarEditorRef = useRef();\r\n\r\n    const onFileInputChange = (ev) => {\r\n        const currFiles = ev.target.files;\r\n\r\n        if(currFiles.length === 1) {\r\n            const file = currFiles[0];\r\n\r\n            if( isValidFile(file) ) {\r\n\r\n                setImg(file)\r\n\r\n                open();\r\n            }\r\n        }\r\n    };\r\n\r\n    const onUploadClick = async () => {\r\n        \r\n        const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n        setIsLoading(true);\r\n        try {\r\n            const blob = await getBlob(canvas);   \r\n            \r\n            const avatarFileRef = storage.ref(`/profiles/${profile.uid}`).child('avatar')\r\n\r\n            const uploadAvatarResult = await avatarFileRef.put( blob, {\r\n                cacheControl: `public, max-age=${3600 * 24 * 3}`\r\n            });\r\n\r\n            const downloadUrl = await uploadAvatarResult.ref.getDownloadURL()\r\n\r\n            const updates = await getUserUpdates(profile.uid, 'avatar', downloadUrl, database);\r\n            await database.ref().update(updates)\r\n\r\n\r\n            setIsLoading(false)\r\n            Alert.info('Avatar has been uploaded', 4000);\r\n\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            Alert.error(err.message, 4000)\r\n            \r\n        }\r\n    }\r\n\r\n  return (\r\n    <div className='mt-3 text-center'>\r\n\r\n        <ProfileAvatar src={profile.avatar} name={profile.name} className='width-200 height-200 img-fullsize font-huge' />\r\n\r\n        <div>\r\n            <label htmlFor=\"avatar-upload\"\r\n            className='d-block cursor-pointer padded'\r\n            >\r\n                Select new avatar\r\n                <input \r\n                id='avatar-upload'\r\n                 type=\"file\"\r\n                 className='d-none'\r\n                 accept={fileInputTypes}\r\n                 onChange={onFileInputChange}\r\n                  />\r\n            </label>\r\n\r\n            <Modal show={isOpen} onHide={close}>\r\n                <Modal.Header>\r\n                    <Modal.Title>\r\n                        Adjust and upload new avatar\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <div className='d-flex justify-content-center align-items-center h-100'>\r\n                    {img &&\r\n                    <AvatarEditor\r\n                    ref={avatarEditorRef}\r\n                    image={img}\r\n                    width={200}\r\n                    height={200}\r\n                    border={10}\r\n                    borderRadius={100}\r\n                    rotate={0}\r\n                  />\r\n                    }\r\n                    </div>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button block appearance='ghost' onClick={onUploadClick} disabled={isLoading}>\r\n                        Upload new avatar\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AvatarUploadBtn;","/* eslint-disable no-console */\r\nimport React, { useState } from 'react'\r\nimport { Alert, Button, Icon, Tag } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nfunction ProviderBlock() {\r\n\r\n    const [isConnected, setIsConnected] = useState({\r\n        'google.com': auth.currentUser.providerData.some(\r\n            data => data.providerId === 'google.com'\r\n        ),\r\n        'facebook.com': auth.currentUser.providerData.some(\r\n            data => data.providerId === 'facebook.com'\r\n        ),\r\n    });\r\n\r\n    const updateIsConnected = (providerId, value) => {\r\n        setIsConnected(p => {\r\n            return {\r\n                ...p,\r\n                [providerId]: value,\r\n            };\r\n        });\r\n    };\r\n\r\n    const unlink = async (providerId) => {\r\n\r\n        try {\r\n            if(auth.currentUser.providerData.length === 1) {\r\n                throw new Error(`You can not disconnect from ${providerId}`)\r\n            }\r\n\r\n            await auth.currentUser.unlink(providerId);\r\n            updateIsConnected(providerId, false);\r\n            Alert.info(`Disconnected from ${providerId}`, 4000)\r\n            \r\n        } catch (err) {\r\n            Alert.error(err.message, 4000)      \r\n        }\r\n    };\r\n\r\n    const unlinkFacebook = () => {\r\n        unlink('facebook.com')\r\n    }\r\n    const unlinkGoogle = () => {\r\n        unlink('google.com')\r\n    };\r\n\r\n    const link = async (provider) => {\r\n        try {\r\n            await auth.currentUser.linkWithPopup(provider);\r\n            Alert.info(`Linked to ${provider.providerId}`, 4000)\r\n            updateIsConnected(provider.providerId, true);\r\n            \r\n        } catch (err) {\r\n            Alert.error(err.message, 4000)\r\n            \r\n        }\r\n    \r\n    }\r\n\r\n    const linkFacebook = () => {\r\n        link(new firebase.auth.FacebookAuthProvider())\r\n    };\r\n    const linkGoogle = () => {\r\n        link(new firebase.auth.GoogleAuthProvider())\r\n    };\r\n\r\n  return (\r\n    <div>\r\n        {isConnected['google.com'] && (\r\n            <Tag color='green' closable onClose={unlinkGoogle}>\r\n            <Icon icon='google' /> Connected\r\n        </Tag>\r\n        )}\r\n        {isConnected['facebook.com'] && (\r\n            <Tag color='blue' closable onClose={unlinkFacebook}>\r\n            <Icon icon='facebook' /> Connected\r\n        </Tag>\r\n        )}\r\n\r\n        <div className='mt-2'>\r\n            {!isConnected['google.com'] &&\r\n            <Button block color='green' onClick={linkGoogle}>\r\n            <Icon icon='google' /> Link to Google\r\n            </Button>\r\n            }\r\n\r\n            {!isConnected['facebook.com'] &&\r\n            <Button block color='blue' onClick={linkFacebook}>\r\n            <Icon icon='facebook' /> Link to Facebook\r\n            </Button>\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProviderBlock;","/* eslint-disable no-console */\r\nimport React from 'react'\r\nimport { Alert, Button, Divider, Drawer } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport { database } from '../../misc/firebase';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\nimport EditableInput from '../EditableInput';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport ProviderBlock from './ProviderBlock';\r\n\r\nfunction Dashboard({ onSignOut }) {\r\n\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n\r\n    try {\r\n      const updates = await getUserUpdates(profile.uid, 'name', newData, database);\r\n\r\n      await database.ref().update(updates)\r\n\r\n      Alert.success('Nickname has been updated', 4000)\r\n      \r\n    } catch (err) {\r\n      Alert.error(err.message, 4000)\r\n      \r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Drawer.Header>\r\n      <Drawer.Title>\r\n        Dashboard\r\n      </Drawer.Title>\r\n    </Drawer.Header>\r\n\r\n    <Drawer.Body>\r\n      <h3>Hey, {profile.name}</h3>\r\n      <ProviderBlock />\r\n      <Divider />\r\n      <EditableInput\r\n        name=\"nickname\"\r\n        initialValue={profile.name}\r\n        onSave={onSave}\r\n        label={<h6 className='mb-2'>Nickname</h6>}\r\n      />\r\n      <AvatarUploadBtn />\r\n    </Drawer.Body>\r\n\r\n    <Drawer.Footer>\r\n      <Button block color='red' onClick={onSignOut}>\r\n        Sign out\r\n      </Button>\r\n    </Drawer.Footer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Dashboard;","/* eslint-disable react/jsx-no-useless-fragment */\r\nimport React, { useCallback } from 'react';\r\nimport { Alert, Button, Drawer, Icon } from 'rsuite';\r\nimport Dashboard from '.';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\nimport { useMediaQuery, useModalState } from '../../misc/custom-hooks';\r\nimport { auth, database } from '../../misc/firebase';\r\n\r\nfunction DashboardToggle() {\r\n\r\n  const { isOpen, close, open } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n\r\n    database.ref(`/status/${auth.currentUser.uid}`).set(isOfflineForDatabase).then(() => {\r\n      auth.signOut();\r\n\r\n      Alert.info('Signed out', 4000)\r\n  \r\n      close();\r\n    }).catch(err => {\r\n      Alert.error(err.message, 4000)\r\n    })\r\n\r\n  }, [close])\r\n\r\n  return (\r\n    <>\r\n      <Button block color='blue' onClick={open}>\r\n        <Icon icon='dashboard' />Dashboard\r\n        </Button>\r\n        <Drawer full={isMobile} show={isOpen} onHide={close} placement='left'>\r\n          <Dashboard onSignOut={onSignOut} />\r\n        </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DashboardToggle;","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { database } from \"../misc/firebase\";\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\n\r\n\r\nconst RoomsContext = createContext();\r\n\r\nfunction RoomsProvider({children}) {\r\n    const [rooms, setRooms] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const roomListRef = database.ref('rooms');\r\n\r\n        roomListRef.on('value', snap => {\r\n            const data = transformToArrWithId(snap.val())\r\n            setRooms(data);\r\n        });\r\n\r\n        return () => {\r\n            roomListRef.off();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n    )\r\n}\r\n\r\nexport default RoomsProvider;\r\n\r\nexport const useRooms = () => {\r\n    return useContext(RoomsContext);\r\n}\r\n\r\n","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nfunction RoomItem({ room }) {\r\n    const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n            <h3 className='text-disappear'>{name}</h3>\r\n            <TimeAgo\r\n               datetime={lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)} className='font-normal text-black-45' />\r\n        </div>\r\n\r\n        <div className='d-flex align-items-center text-black-70'>\r\n          {\r\n            lastMessage ? (\r\n\r\n            <>\r\n            <div className='d-flex align-items-center'>\r\n              <ProfileAvatar src={lastMessage.author.avatar} name={lastMessage.author.name} size=\"sm\" />\r\n            </div>\r\n\r\n            <div className='text-disappear ml-2'>\r\n              <div className='italic'>{lastMessage.author.name}</div>\r\n              <span>{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n\r\n            </>\r\n            ) : (\r\n            <span>No messages yet...</span>\r\n          )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomItem;","/* eslint-disable array-callback-return */\r\nimport React from 'react'\r\nimport { Loader, Nav } from 'rsuite';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport RoomItem from './RoomItem';\r\n\r\n\r\nfunction ChatRoomList({ aboveElementHeight }) {\r\n\r\n    const rooms = useRooms();\r\n    const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n       appearance='subtle'\r\n       vertical\r\n       reversed\r\n       className='overflow-y-scroll custom-scroll'\r\n       style={{\r\n        height: `calc(100% - ${aboveElementHeight}px)`,\r\n       }}\r\n       activeKey={location.pathname}\r\n    >\r\n        {!rooms && (\r\n            <Loader center vertical content='Loading' speed='slow' size=\"md\" />\r\n        )}\r\n        {rooms &&\r\n          rooms.length > 0 &&\r\n          rooms.map((room) => (\r\n            <Nav.Item \r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n             key={room.id}\r\n             eventKey={`/chat/${room.id}`}\r\n             >\r\n                <RoomItem room={room} />\r\n            </Nav.Item>\r\n          ))}\r\n    </Nav>\r\n  )\r\n}\r\n\r\nexport default ChatRoomList;","import React, { useEffect, useRef, useState } from 'react'\r\nimport { Divider } from 'rsuite';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nfunction Sidebar() {\r\n\r\n  const topSidebarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n\r\n  return (\r\n    <div className='h-100 pt-2'>\r\n        <div>\r\n            <DashboardToggle />\r\n            <CreateRoomBtnModal />\r\n            <Divider>Join conversation</Divider>\r\n        </div>\r\n        <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport { createContext, useContextSelector } from \"use-context-selector\";\r\n\r\n\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nfunction CurrentRoomProvider({ children, data }) {\r\n    return (\r\n        <CurrentRoomContext.Provider value={data}>\r\n            {children}\r\n        </CurrentRoomContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CurrentRoomProvider;\r\n\r\nexport const useCurrentRoom = (selector) => useContextSelector(CurrentRoomContext, selector);\r\n","import React from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Button, Icon, IconButton, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { auth, database } from '../../../misc/firebase';\r\n\r\nfunction AskFcmBtnModal() {\r\n    const {chatId} = useParams();\r\n    const isReceivingFcm = useCurrentRoom((v) => v.isReceivingFcm);\r\n    const { isOpen, close, open } = useModalState()\r\n\r\n    const onAccept = () => {\r\n        database\r\n           .ref(`/rooms/${chatId}/fcmUsers`)\r\n           .child(auth.currentUser.uid)\r\n           .set(true);\r\n    }\r\n\r\n    const onCancel = () => {\r\n        database\r\n           .ref(`/rooms/${chatId}/fcmUsers`)\r\n           .child(auth.currentUser.uid)\r\n           .remove();\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <IconButton \r\n          icon={<Icon icon=\"podcast\" />}\r\n          color=\"blue\"\r\n          size=\"sm\"\r\n          circle\r\n          appearance={isReceivingFcm ? 'default' : 'ghost'}\r\n          onClick={open}\r\n        />\r\n\r\n        <Modal show={isOpen} onHide={close} size=\"xs\" backdrop='static'>\r\n            <Modal.Header>\r\n                <Modal.Title>Notification permission</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {isReceivingFcm ? (\r\n                    <div className='text-center'>\r\n                        <Icon className='text-green mb-3' icon=\"check-circle\" size='5x' />\r\n                        <h6>\r\n                            You are subscribed to broadcast messages sent by admins of this room.\r\n                        </h6>\r\n                    </div>\r\n                ) : (\r\n                    <div className='text-center'>\r\n                        <Icon \r\n                           className='text-blue mb-3'\r\n                           icon=\"question-circle\"\r\n                           size=\"5x\"\r\n                            />\r\n                            <h6>\r\n                                Do you want to subscribe to messages sent by admins of this room\r\n                            </h6>\r\n                    </div>\r\n                )}\r\n                <p className='mt-2'>\r\n                    To receive notifications make sure you allow Notifications in you browser\r\n                </p>\r\n                <p>\r\n                    Permission: {' '}\r\n                    {Notification.permission === \"granted\" ? (\r\n                        <span className='text-green'>Granted</span>\r\n                    ) : (\r\n                        <span className='text-red'>Denied</span>\r\n                    )}\r\n                </p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {isReceivingFcm ? (\r\n                    <Button color='green' onClick={onCancel}>\r\n                        I changed my mind\r\n                    </Button>\r\n                ) : (\r\n                    <Button color='green' onClick={onAccept}>\r\n                        Yes, I do\r\n                    </Button>\r\n                )}\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AskFcmBtnModal;","import React, { memo } from 'react';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useParams } from 'react-router';\r\nimport EditableInput from '../../EditableInput';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery, useModalState } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\n\r\n\r\nfunction EditRoomBtnDrawer() {\r\n\r\n    const { isOpen, open, close } = useModalState();\r\n    const { chatId } = useParams()\r\n    const isMobile = useMediaQuery('(max-width: 992px)')\r\n\r\n    const name = useCurrentRoom(v => v.name);\r\n    const description = useCurrentRoom(v => v.description);\r\n\r\n    const updateData = (key, value) => {\r\n        database.ref(`rooms/${chatId}`).child(key).set(value).then(() => {\r\n            Alert.success('Successfully updated', 4000)\r\n        }).catch(err => {\r\n            Alert.error(err.message, 4000)\r\n        })\r\n    }\r\n\r\n    const onNameSave = (newName) => {\r\n        updateData('name', newName)\r\n    }\r\n\r\n    const onDescriptionSave = (newDesc) => {\r\n        updateData('description', newDesc)\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <Button className='br-circle' size='sm' color='red' onClick={open}>\r\n            A\r\n        </Button>\r\n\r\n        <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n\r\n            <Drawer.Header>\r\n                <Drawer.Title>Edit Room</Drawer.Title>\r\n            </Drawer.Header>\r\n            <Drawer.Body>\r\n                <EditableInput\r\n                   initialValue={name}\r\n                   onSave={onNameSave}\r\n                   label={<h6 className='mb-2'>Name</h6>}\r\n                   emptyMsg=\"Name can not be empty\" \r\n                />\r\n                <EditableInput\r\n                  componentClass=\"textarea\"\r\n                  rows={5}\r\n                  initialValue={description}\r\n                  onSave={onDescriptionSave}\r\n                  emptyMsg=\"Description can not be empty\" \r\n                  wrapperClassName='mt-3'\r\n                 />\r\n            </Drawer.Body>\r\n            <Drawer.Footer>\r\n                <Button block onClick={close}>\r\n                    Close\r\n                </Button>\r\n            </Drawer.Footer>\r\n\r\n        </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(EditRoomBtnDrawer);","import React, { memo } from 'react'\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nfunction RoomInfoBtnModal() {\r\n    const { isOpen, close, open } = useModalState()\r\n    const description = useCurrentRoom(v => v.description);\r\n    const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n        <Button appearance='link' className='px-0' onClick={open}>\r\n            Room information\r\n        </Button>\r\n        <Modal show={isOpen} onHide={close}>\r\n\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    About {name}\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h6 className='mb-1'>Description</h6>\r\n                <p>{description}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button block onClick={close}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default memo(RoomInfoBtnModal);","import React, { useCallback, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, ControlLabel, Form, FormControl, FormGroup, Icon, Modal, Schema } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { functions } from '../../../misc/firebase';\r\n\r\n\r\nconst { StringType } = Schema.Types;\r\n\r\nconst model = Schema.Model({\r\n    title: StringType().isRequired('Title is required'),\r\n    message: StringType().isRequired('Message body is required'),\r\n})\r\n\r\nconst INITIAL_FORM = {\r\n    title: '',\r\n    message: ''\r\n}\r\n\r\nfunction SendFcmBtnModal() {\r\n    const {chatId} = useParams();\r\n    const { isOpen, open, close } = useModalState();\r\n    \r\n    const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const formRef = useRef();\r\n\r\n    const onFormChange = useCallback(value => { \r\n        setFormValue(value);\r\n    }, []);\r\n\r\n    const onSubmit = async () => {\r\n        if(!formRef.current.check()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const sendFcm = functions.httpsCallable('sendFcm');\r\n            await sendFcm({chatId, ...formValue});\r\n\r\n            setIsLoading(false);\r\n            setFormValue(INITIAL_FORM);\r\n            close();\r\n\r\n            Alert.info('Notification has been sent', 7000);\r\n        } catch (err) {\r\n            Alert.error(err.message, 7000);\r\n            \r\n        }\r\n    };\r\n       \r\n\r\n  return (\r\n    <>\r\n        <Button appearance='primary' size='xs' onClick={open}>\r\n            <Icon icon='podcast' /> Broadcast message\r\n        </Button>\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    Send notification to room users\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form fluid onChange={onFormChange} formValue={formValue} model={model} ref={formRef}>\r\n\r\n                    <FormGroup>\r\n                        <ControlLabel>Title</ControlLabel>\r\n                        <FormControl name='title' placeholder='Enter message title...' />\r\n                    </FormGroup>\r\n\r\n                    <FormGroup>\r\n                        <ControlLabel>Message</ControlLabel>\r\n                        <FormControl componentClass='textarea' rows={5} name='message' placeholder='Enter notification message...' />\r\n                    </FormGroup>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button block appearance='primary' onClick={onSubmit} disabled={isLoading}>\r\n                    Publish Message\r\n                </Button>\r\n            </Modal.Footer>\r\n            \r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SendFcmBtnModal;","import React, { memo } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useMediaQuery } from '../../../misc/custom-hooks';\r\nimport AskFcmBtnModal from './AskFcmBtnModal';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\nimport SendFcmBtnModal from './SendFcmBtnModal';\r\n\r\nfunction Top() {\r\n    const name = useCurrentRoom(v => v.name);\r\n    const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n    const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  return (\r\n    <div>\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n            <h4 className='text-disappear d-flex align-items-center'>\r\n                <Icon\r\n                  componentClass={Link}\r\n                  to=\"/\"\r\n                  icon=\"arrow-circle-left\"\r\n                  size=\"2x\"\r\n                  className={\r\n                    isMobile\r\n                      ? 'd-inline-block p-0 mr-2 text-blue link-unstyled'\r\n                      : 'd-none'\r\n                  } \r\n                  />\r\n                  <span className='text-disappear'>{name}</span>\r\n            </h4>\r\n\r\n            <ButtonToolbar className='ws-nowrap'>\r\n              <AskFcmBtnModal />\r\n              {isAdmin && <EditRoomBtnDrawer />}\r\n            </ButtonToolbar>\r\n        </div>\r\n\r\n        <div className='d-flex justify-content-between align-items-center'>\r\n            {isAdmin && <SendFcmBtnModal />}\r\n            <RoomInfoBtnModal />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default memo(Top);","import React, { useState } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button, Icon, InputGroup, Modal, Uploader } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nfunction AttachmentBtnModal({ afterUpload }) {\r\n    const { chatId } = useParams();\r\n    const { isOpen, close, open} = useModalState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const onChange = (fileArr) => {\r\n\r\n        const filtered = fileArr.filter(el => el.blobFile.size <= MAX_FILE_SIZE).slice(0, 5);\r\n\r\n        setFileList(filtered)\r\n\r\n    };\r\n\r\n    const onUpload = async () => {\r\n        try {\r\n            const uploadPromises = fileList.map(f => {\r\n                return storage\r\n                  .ref(`/chat/${chatId}`)\r\n                  .child(Date.now() + f.name)\r\n                  .put(f.blobFile, {\r\n                    cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n                  });\r\n            });\r\n\r\n            const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n            const shapePromises = uploadSnapshots.map(async snap => {\r\n                return {\r\n                    contentType: snap.metadata.contentType,\r\n                    name: snap.metadata.name,\r\n                    url: await snap.ref.getDownloadURL()\r\n                }\r\n            })\r\n\r\n            const files = await Promise.all(shapePromises);\r\n\r\n            await afterUpload(files);\r\n\r\n            setIsLoading(false)\r\n            close();\r\n\r\n            \r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            Alert.error(err.message)\r\n            \r\n        }\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <InputGroup.Button onClick={open}>\r\n            <Icon icon=\"attachment\" />\r\n        </InputGroup.Button>\r\n        <Modal show={isOpen} onHide={close}>\r\n\r\n            <Modal.Header>\r\n                <Modal.Title>Upload files</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <Uploader\r\n              autoUpload={false}\r\n              action=\"\"\r\n              fileList={fileList}\r\n              onChange={onChange}\r\n              multiple\r\n              listType='picture-text'\r\n              className='w-100'\r\n              disabled={isLoading}\r\n      />\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button block disabled={isLoading} onClick={onUpload}>\r\n                    Send to chat\r\n                </Button>\r\n                <div className='text-right mt-2'>\r\n                    <small>* only files less than 5 mb are allowed</small>\r\n                </div>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AttachmentBtnModal;","import React, { useCallback, useState } from 'react'\r\nimport { Alert, Icon, InputGroup } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\nimport { useParams } from 'react-router';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nfunction AudioMsgBtn(afterUpload) {\r\n\r\n    const {chatId} = useParams()\r\n\r\n    const [isRecording, setIsRecording] = useState(false);\r\n    const [isUploading, setIsUploading] = useState(false);\r\n\r\n    const onClick = useCallback(() => {\r\n        setIsRecording(p => !p);\r\n    }, []);\r\n\r\n    const onUpload = useCallback(async (data) => {\r\n        setIsUploading(true)\r\n        try {\r\n\r\n            const snap = await storage\r\n                  .ref(`/chat/${chatId}`)\r\n                  .child(`audio_${Date.now()}.mp3`)\r\n                  .put(data.blob, {\r\n                    cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n                  });\r\n\r\n                const file = {\r\n                    contentType: snap.metadata.contentType,\r\n                    name: snap.metadata.name,\r\n                    url: await snap.ref.getDownloadURL()\r\n                };\r\n\r\n                setIsUploading(false);\r\n                afterUpload([file])\r\n        } catch (err) {\r\n            setIsUploading(false);\r\n            Alert.error(err.message)  \r\n        }\r\n    }, [afterUpload, chatId])\r\n\r\n\r\n  return (\r\n    <InputGroup.Button onClick={onClick}\r\n     disabled={isUploading}\r\n     className={isRecording ? 'animate-blink' : ''}\r\n     >\r\n    <Icon icon=\"microphone\" />\r\n    <ReactMic\r\n          record={isRecording}\r\n          className=\"d-none\"\r\n          onStop={onUpload}\r\n          mimeType=\"audio/mp3\"\r\n           />\r\n</InputGroup.Button>\r\n  )\r\n}\r\n\r\nexport default AudioMsgBtn;","import React, { useCallback, useState } from 'react'\r\nimport { Alert, Icon, Input, InputGroup } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n    return {\r\n        roomId: chatId,\r\n        author: {\r\n            name: profile.name,\r\n            uid: profile.uid,\r\n            createdAt: profile.createdAt,\r\n            ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n        },\r\n        createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        likeCount: 0,\r\n    };\r\n}\r\n\r\nfunction Bottom() {\r\n\r\n    const [input, setInput] = useState('');\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const { chatId } = useParams();\r\n    const { profile } = useProfile();\r\n\r\n    const onInputChange = useCallback((value) => {\r\n        setInput(value);\r\n    }, [])\r\n\r\n    const onSendClick = async() => {\r\n        if (input.trim() === '') {\r\n            return\r\n        }\r\n\r\n        const msgData = assembleMessage(profile, chatId);\r\n        msgData.text = input;\r\n\r\n        const updates = {};\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n            ...msgData,\r\n            msgId: messageId,\r\n        };\r\n\r\n        setIsLoading(true)\r\n        try {\r\n\r\n            await database.ref().update(updates);\r\n\r\n            setInput('');\r\n            setIsLoading(false)\r\n            \r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            Alert.error(err.message);\r\n            \r\n        }\r\n    }\r\n\r\n    const onKeyDown = (ev) => {\r\n        if(ev.key === 'Enter') {\r\n            ev.preventDefault();\r\n            onSendClick();\r\n        }\r\n    }\r\n\r\n    const afterUpload = useCallback(async (files) => {\r\n\r\n        setIsLoading(true);\r\n\r\n        const updates = {};\r\n\r\n        files.forEach(file => {\r\n\r\n            const msgData = assembleMessage(profile, chatId);\r\n            msgData.file = file;\r\n\r\n            const messageId = database.ref('messages').push().key;\r\n\r\n            updates[`/messages/${messageId}`] = msgData;\r\n        })\r\n\r\n        const lastMsgId = Object.keys(updates).pop();\r\n\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n            ...updates[lastMsgId],\r\n            msgId: lastMsgId,\r\n        };\r\n\r\n        try {\r\n            await database.ref().update(updates);\r\n            setIsLoading(false);\r\n        } catch (err) {\r\n            setIsLoading(false);\r\n            Alert.error(err.message);\r\n        }\r\n\r\n    }, [chatId, profile])\r\n\r\n  return (\r\n    <div>\r\n        <InputGroup>\r\n        <AttachmentBtnModal afterUpload={afterUpload} />\r\n        <AudioMsgBtn afterUpload={afterUpload} />\r\n           <Input placeholder='Write a new message here...' value={input} onChange={onInputChange} onKeyDown={onKeyDown} />\r\n\r\n           <InputGroup.Button color='blue' appearance='primary' onClick={onSendClick} disabled={isLoading}>\r\n           <Icon icon='send' />\r\n           </InputGroup.Button>\r\n        </InputGroup>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Bottom;","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n    if(!presence) {\r\n        return 'gray';\r\n    }\r\n\r\n    switch (presence.state) {\r\n        case 'online':\r\n            return 'green';\r\n        case 'offline':\r\n            return 'red';\r\n        default:\r\n            return 'gray';\r\n    }\r\n};\r\n\r\nconst getText = presence => {\r\n    if (!presence) {\r\n        return 'Unknown state'\r\n    }\r\n\r\n    return presence.state === 'online'\r\n      ? 'Online'\r\n      : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\n\r\nfunction PresenceDot({ uid }) {\r\n    const presence = usePresence(uid);\r\n\r\n  return (\r\n    <Whisper\r\n      placement='top'\r\n      trigger='hover'\r\n      speaker={\r\n        <Tooltip>\r\n            {getText(presence)}\r\n        </Tooltip>\r\n      }\r\n    >\r\n        <Badge className='cursor-pointer' style={{backgroundColor: getColor(presence)}} />\r\n    </Whisper>\r\n  )\r\n}\r\n\r\nexport default PresenceDot;","import React from 'react';\r\nimport { Icon, Tooltip, Whisper, Badge, IconButton } from 'rsuite';\r\n\r\nfunction ConditionalBadge({condition, children}) {\r\n    return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n}\r\n\r\nfunction IconBtnControl({\r\n    isVisible,\r\n    iconName,\r\n    tooltip,\r\n    onClick,\r\n    badgeContent,\r\n    ...props\r\n}) { \r\n    return (\r\n        <div className='ml-2' style={{visibility: isVisible ? 'visible' : 'hidden'}}>\r\n\r\n            <ConditionalBadge condition={badgeContent} >\r\n                <Whisper\r\n\r\n                  placement=\"top\"\r\n\r\n                  delay={0}\r\n                  delayHide={0}\r\n                  delayShow={0}\r\n                  trigger=\"hover\"\r\n                  speaker={<Tooltip>{tooltip}</Tooltip>}\r\n                >\r\n                    <IconButton\r\n                    {...props}\r\n                    onClick={onClick}\r\n                    circle\r\n                    size=\"xs\"\r\n                    icon={<Icon icon={iconName} />}\r\n                    />\r\n                </Whisper>\r\n\r\n            </ConditionalBadge>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default IconBtnControl;","import React from 'react'\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nfunction ImgBtnModal({ src, fileName }) {\r\n\r\n    const { isOpen, open, close } = useModalState();\r\n\r\n  return (\r\n    <>\r\n    <input type=\"image\" src={src} alt=\"file\" onClick={open} className=\"mw-100 mh-100 w-auto\" />\r\n    <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n            <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <div>\r\n                <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n            </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <a href={src} target=\"_blank\" rel='noopener noreferrer'>\r\n                View original\r\n            </a>\r\n        </Modal.Footer>\r\n\r\n    </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ImgBtnModal;","import React from 'react'\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nfunction ProfileInfoBtnModal({ profile, children, ...btnProps }) {\r\n\r\n    const { isOpen, close, open } = useModalState()\r\n\r\n    const { name, avatar, createdAt } = profile;\r\n\r\n    const shortName = profile.name.split(' ')[0];\r\n\r\n    const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n\r\n        <Button {...btnProps} onClick={open}>\r\n            {shortName}\r\n        </Button>\r\n        <Modal show={isOpen} onHide={close}>\r\n\r\n            <Modal.Header>\r\n                <Modal.Title>\r\n                    {shortName} profile\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='text-center'>\r\n            <ProfileAvatar src={avatar} name={name} className='width-200 height-200 img-fullsize font-huge' />\r\n\r\n            <h4>{name}</h4>\r\n\r\n            <p>Member since {memberSince}</p>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                {children}\r\n                <Button block onClick={close}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileInfoBtnModal;  ","/* eslint-disable no-constant-condition */\r\nimport React, { memo } from 'react';\r\nimport { Button } from 'rsuite';\r\nimport TimeAgo from 'timeago-react';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport { auth } from '../../../misc/firebase';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\n\r\nconst renderFileMessage = (file) => {\r\n\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className='height-220'>\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(file.contentType.includes('audio')) {\r\n    // eslint-disable-next-line jsx-a11y/media-has-caption\r\n    return <audio controls>\r\n      <source src={file.url} type=\"audio/mp3\" />\r\n      Your browser does not support the audio element\r\n    </audio>\r\n  }\r\n\r\n\r\n  return <a href={file.url}>Download {file.name}</a>\r\n}\r\n\r\n\r\n\r\nfunction MessageItem({ message, handleAdmin, handleLike, handleDelete }) {\r\n\r\n    const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n    const [selfRef, isHovered] = useHover();\r\n    const isMobile = useMediaQuery(('(max-width: 992px)'));\r\n\r\n    const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n    const admins = useCurrentRoom(v => v.admins);\r\n\r\n    const isMsgAuthorAdmin = admins.includes(author.uid);\r\n    const isAuthor = auth.currentUser.uid === author.uid;\r\n    const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n    const canShowIcons = isMobile || isHovered;\r\n    const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return ( \r\n  <li className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`} ref={selfRef}>\r\n    \r\n    <div className='d-flex align-items-center font-bolder mb-1'>\r\n      <PresenceDot uid={author.uid} />\r\n\r\n        <ProfileAvatar src={author.avatar} name={author.name} className='ml-1' size=\"xs\" />\r\n\r\n        <ProfileInfoBtnModal profile={author} appearance='link' className='p-0 ml-1 text-black' >\r\n           {canGrantAdmin && (\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\">\r\n              {isMsgAuthorAdmin\r\n                ? 'Remove admin permission'\r\n                : 'Give admin in this room'}\r\n            </Button>\r\n           )}\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n               datetime={createdAt} \r\n               className='font-normal text-black-45 ml-2' />\r\n\r\n               <IconBtnControl\r\n                 {...(isLiked ? { color: 'red' } : {})}\r\n                 isVisible={canShowIcons}\r\n                 iconName=\"heart\"\r\n                 tooltip=\"Like this message\"\r\n                 onClick={() => handleLike(message.id)}\r\n                 badgeContent={likeCount}\r\n               />\r\n               {\r\n                isAuthor &&  \r\n                <IconBtnControl\r\n                isVisible={canShowIcons}\r\n                iconName=\"close\"\r\n                tooltip=\"Delete this message\"\r\n                onClick={() => handleDelete(message.id, file)}\r\n              />\r\n               }\r\n\r\n    </div>\r\n\r\n    <div>\r\n      {text && <span className='word-breal-all'>{text}</span>}\r\n      {file && renderFileMessage(file)}\r\n    </div>\r\n  </li>\r\n  )\r\n}\r\n\r\nexport default memo(MessageItem);","import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { auth, database, storage } from '../../../misc/firebase';\r\nimport { groupBy, transformToArrWithId } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage = \r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold;\r\n}\r\n\r\nfunction Messages() {\r\n  const { chatId } = useParams()\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef()\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback((\r\n    limitToLast) => {\r\n      const node = selfRef.current;\r\n      \r\n    messagesRef.off();\r\n    messagesRef\r\n      .orderByChild('roomId')\r\n      .equalTo(chatId)\r\n      .limitToLast(limitToLast || PAGE_SIZE)\r\n      .on('value', (snap) => {\r\n        const data = transformToArrWithId(snap.val());\r\n      setMessages(data);\r\n\r\n      if (shouldScrollToBottom(node)) {\r\n        node.scrollTop = node.scrollHeight;\r\n      }\r\n\r\n    });\r\n\r\n    setLimit(p => p + PAGE_SIZE)\r\n  }, [chatId]);\r\n  \r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200)\r\n\r\n  }, [loadMessages, limit])\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200)\r\n\r\n  return () => {\r\n    messagesRef.off('value');\r\n  }\r\n}, [loadMessages]);\r\n\r\nconst handleAdmin = useCallback(\r\n  async (uid) => {\r\n  const adminRef = database.ref(`/rooms/${chatId}/admins`);\r\n\r\n  let alertMsg;\r\n\r\n  await adminRef.transaction(admins => {\r\n\r\n    if (admins) {\r\n      if (admins[uid]) {\r\n        admins[uid] = null;\r\n      } else {\r\n        admins[uid] = true;\r\n        alertMsg = 'Admin permission granted';\r\n        }\r\n      }\r\n    return admins;\r\n  });\r\n\r\n  Alert.info(alertMsg, 4000)\r\n\r\n}, [chatId])\r\n\r\nconst handleLike = useCallback(async (msgId) => {\r\n  const { uid } = auth.currentUser;\r\n  const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n  let alertMsg;\r\n\r\n  await messageRef.transaction(msg => {\r\n\r\n    if (msg) {\r\n      if (msg.likes && msg.likes[uid]) {\r\n        msg.likeCount -= 1;\r\n        msg.likes[uid] = null;\r\n        alertMsg = 'Like removed';\r\n      } else {\r\n        msg.likeCount += 1;\r\n\r\n        if(!msg.likes) {\r\n          msg.likes= {};\r\n        }\r\n        msg.likes[uid] = true;\r\n        alertMsg = 'Like added';\r\n        }\r\n      }\r\n    return msg;\r\n  });\r\n\r\n  Alert.info(alertMsg, 4000)\r\n\r\n}, []);\r\n\r\nconst handleDelete = useCallback(\r\n  async (msgId, file) => {\r\n\r\n  // eslint-disable-next-line no-alert\r\n  if( !window.confirm('Delete this message?') ) {\r\n    return;\r\n  }\r\n\r\n  const isLast = messages[messages.length -1].id === msgId;\r\n\r\n  const updates = {};\r\n\r\n  updates[`/messages/${msgId}`] = null;\r\n\r\n  if(isLast && messages.length > 1) {\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...messages[messages.length - 2],\r\n      msgId: messages[messages.length - 2].id\r\n    }\r\n  }\r\n\r\n  if(isLast && messages.length === 1) {\r\n    updates[`/messages/${msgId}`] = null;\r\n  }\r\n\r\n  try {\r\n\r\n    await database.ref().update(updates)\r\n\r\n    Alert.info('Message has been deleted')\r\n    \r\n  } catch (err) {\r\n    Alert.error(err.message);\r\n  }\r\n\r\n  if (file) {\r\n    try {\r\n      const fileRef = storage.refFromURL(file.url);\r\n      await fileRef.delete();\r\n    } catch (err) {\r\n      // eslint-disable-next-line consistent-return\r\n      return Alert.error(err.message);\r\n    }\r\n  }\r\n\r\n}, [chatId, messages]);\r\n\r\nconst renderMessages = () => {\r\n  const groups = groupBy(messages, item => \r\n    new Date(item.createdAt).toDateString()\r\n  );\r\n\r\n  const items = [];\r\n\r\n  Object.keys(groups).forEach((date) => {\r\n\r\n    items.push( <li key={date} className=\"text-center mb-1 padded\">{date}</li> )\r\n\r\n    const msgs = groups[date].map(msg => (\r\n      <MessageItem \r\n        key={msg.id}\r\n        message={msg} \r\n        handleAdmin={handleAdmin} \r\n        handleLike={handleLike} \r\n        handleDelete={handleDelete} \r\n        /> \r\n    ))\r\n    items.push(...msgs);\r\n  })\r\n  return items;\r\n}\r\n\r\nreturn <ul ref={selfRef} className='msg-list custom-scroll'>\r\n  {messages && messages.length >= PAGE_SIZE && (\r\n    <li className='text-center mt-2 mb-2'>\r\n      <Button onClick={onLoadMore} color=\"green\">\r\n        Load more\r\n      </Button>\r\n    </li>\r\n  )}\r\n  {isChatEmpty && <li>No messages yet</li> }\r\n  {canShowMessages && renderMessages()}\r\n</ul>\r\n};\r\n\r\nexport default Messages;","import React from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport CurrentRoomProvider from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\n\r\nfunction Chat() {\r\n\r\n    const {chatId} = useParams();\r\n\r\n    const rooms = useRooms();\r\n\r\n    if(!rooms) {\r\n        return <Loader center vertical size='md' content='Loading' speed='slow' />\r\n    }\r\n\r\n    const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n    if(!currentRoom) {\r\n        return <h6 className='text-center mt-page'>Chat {chatId} not found</h6>\r\n    }\r\n\r\n    const {name, description} = currentRoom;\r\n\r\n    const admins = transformToArr(currentRoom.admins);\r\n    const fcmUsers = transformToArr(currentRoom.fcmUsers);\r\n    const isAdmin = admins.includes(auth.currentUser.uid);\r\n    const isReceivingFcm = fcmUsers.includes(auth.currentUser.uid);\r\n\r\n    const currentRoomData = {\r\n        name,\r\n        description,\r\n        admins,\r\n        isAdmin,\r\n        isReceivingFcm,\r\n    };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n        <div className='chat-top'>\r\n            <ChatTop />\r\n        </div>\r\n        <div className='chat-middle'>\r\n            <Messages />\r\n        </div>\r\n        <div className='chat-bottom'>\r\n            <ChatBottom />\r\n        </div>\r\n    </CurrentRoomProvider>\r\n  )\r\n}\r\n\r\nexport default Chat;","import React from 'react';\r\nimport { Route, Switch, useRouteMatch } from 'react-router';\r\nimport { Col, Grid, Row } from 'rsuite';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport RoomsProvider from '../../context/rooms.context';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\nimport Chat from './Chat';\r\n\r\nfunction Home() {\r\n\r\n  const isDesktop = useMediaQuery(`(min-width: 992px)`);\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n  <RoomsProvider>\r\n  <Grid fluid className='h-100'>\r\n    <Row className='h-100'>\r\n      {canRenderSidebar &&\r\n      <Col xs={24} md={8} className='h-100'>\r\n      <Sidebar />\r\n      </Col>\r\n      }\r\n\r\n      <Switch>\r\n        <Route exact path=\"/chat/:chatId\">\r\n          <Col xs={24} md={16} className=\"h-100\">\r\n            <Chat />\r\n          </Col>\r\n        </Route>\r\n        <Route>\r\n          {isDesktop &&\r\n          <Col xs={24} md={16} className=\"h-100\">\r\n            <h6 className='text-center mt-page'>Please select chat</h6>\r\n          </Col>\r\n          }\r\n        </Route>\r\n      </Switch>\r\n    </Row>\r\n  </Grid>\r\n  </RoomsProvider>\r\n)}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nfunction PublicRoute({ children, ...routeProps }) {\r\n\r\n    const { profile, isLoading} = useProfile();\r\n\r\n    if(isLoading && !profile) {\r\n      return <Container>\r\n        <Loader center vertical size='md' content=\"Loading\" speed='slow' />\r\n      </Container>\r\n    }\r\n\r\n    if(profile && !isLoading) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Route { ...routeProps }>\r\n            {children}\r\n        </Route>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PublicRoute;","/* eslint-disable react/destructuring-assignment */\r\n/* eslint-disable object-shorthand */\r\nimport React from \"react\";\r\n\r\nexport class ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = { error: null, errorInfo: null };\r\n    }\r\n    \r\n    componentDidCatch(error, errorInfo) {\r\n      // Catch errors in any components below and re-render with error message\r\n      this.setState({\r\n        error: error,\r\n        errorInfo: errorInfo\r\n      })\r\n      // You can also log error messages to an error reporting service here\r\n    }\r\n    \r\n    render() {\r\n      if (this.state.errorInfo) {\r\n        // Error path\r\n        return (\r\n          <div>\r\n            <h2>Something went wrong.</h2>\r\n            <details style={{ whiteSpace: 'pre-wrap' }}>\r\n              {this.state.error && this.state.error.toString()}\r\n              <br />\r\n              {this.state.errorInfo.componentStack}\r\n            </details>\r\n          </div>\r\n        );\r\n      }\r\n      // Normally, just render children\r\n      return this.props.children;\r\n    }  \r\n  }","import React, { lazy, Suspense } from 'react';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport { Switch } from 'react-router';\nimport PrivateRoute from './components/PrivateRoute';\nimport Home from './pages/Home';\n// import SignIn from './pages/SignIn';\nimport './styles/main.scss';\nimport PublicRoute from './components/PublicRoute';\nimport ProfileProvider from './context/profile.context';\nimport { ErrorBoundary } from './components/ErrorBoundary';\n\n\nconst SignIn = lazy(() => import('./pages/SignIn'));\n\nfunction App() {\n  return (\n    <ErrorBoundary>\n    < ProfileProvider>\n    <Switch>\n\n    <PublicRoute path='/signin'>\n      <Suspense fallback={<div>Loading...</div>}>\n      <SignIn />\n      </Suspense>\n    </PublicRoute>\n\n    <PrivateRoute path='/'>\n      <Home />\n    </PrivateRoute>\n  </Switch>\n  </ProfileProvider>\n  </ErrorBoundary>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n);\n\n","/* eslint-disable no-console */\r\nimport { Notification as Toast } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\nimport 'firebase/messaging';\r\nimport 'firebase/functions';\r\nimport { isLocalhost } from './helpers';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyAeBsJrRseLRbEgyafJqqG5tIS1YEEdu6U\",\r\n    authDomain: \"chat-web-app-685d5.firebaseapp.com\",\r\n    databaseURL: \"https://chat-web-app-685d5-default-rtdb.firebaseio.com\",\r\n    projectId: \"chat-web-app-685d5\",\r\n    storageBucket: \"chat-web-app-685d5.appspot.com\",\r\n    messagingSenderId: \"943062344409\",\r\n    appId: \"1:943062344409:web:3c22da0a746da76dcc54c8\"\r\n  };\r\n\r\nexport const fcmVapidKey =\r\n 'BFQ7Yktz1zh7f437wQu7RH64PloELIHsD6GZjdW2mZQz5E2oBkeHmD1S7Lpe2tQrlq9otU-dqm1tM8DqOb_uvro';\r\n\r\nconst app =  firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();\r\nexport const functions = app.functions('europe-west3');\r\n\r\nexport const messaging = firebase.messaging.isSupported() ? app.messaging() : null;\r\n\r\nif(messaging) {\r\n  messaging.getToken({vapidKey: 'BFQ7Yktz1zh7f437wQu7RH64PloELIHsD6GZjdW2mZQz5E2oBkeHmD1S7Lpe2tQrlq9otU-dqm1tM8DqOb_uvro'});\r\n\r\n  messaging.onMessage(({notification}) => {\r\n    \r\n    const { title, body } = notification\r\n    Toast.info({title, description: body, duration: 0}) \r\n   }) \r\n}\r\n\r\nif(isLocalhost) {\r\n  functions.useEmulator('localhost', 5001);\r\n}\r\n\r\n"],"sourceRoot":""}